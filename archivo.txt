
comandos principales
git init -> para inicializar el repositorio
git status -> para saber como esta el estado del repositorio
git add . -> agrega todos los cambios al git para poder hacer commit
git add _nombreArchivo_ -> agrega un archivo especifico para que se pueda hacer commit
git --global user.email "email" ->configura el email con el que se va comitar
git --global user.name "name" -> configura el nombre del usuarios con el que se va a comitar
gir commit ->guarda los cambios en el HEAD tiene su propio identificativo y se puede validar el historial de commits

git log _archivo con extension_ -> muestra todos los commits que se han integrado a este archivo
git show  -> a diferencia de log aca no se ven los commit mas si se puede detallar los cambios en el archivo 
git diff _idComit_ _idComit_ este muestra las diferencias entre las comitadas

al momento de utilizar git init se crea dos partes dentro de este repositorio, el staging y el repositorio, cuando 
se utliza el git add los archivos estan pasando al staging y al momento de dar click los archivos pasan al repositorio y liberan el staging
que almacena datos en la memoria ram

DISCO DURO -> La informacion que se esta codificando en tiempo real
MEMORIA RAM -> La informacion que esta en el stating cuando se ejecuta el add
REPOSITORIO -> informacion que se guarda en el repositorio despues de ejecutar el commit

untracked sin git add 
tracked con git add

Ramas 
    Master en donde estan los cambios en mi rama v1 v2
    Experimentos nueva rama

    Merge 

// git reset nos devuelve al pasado sin posibilidad de volver al futuro
git reset _idcomit_ --hard -> con este comando reseteamos a un punto de la historia con hard borra tambien el staging
git reset _idcomit_ --soft -> con este comando todavia mantiene los cambios en el staging 

// git checkout nos permite volver al pasado pero sin add o commit los cambios se mantienen es decir, nos dejaria volver a los ultimos cambios
// este comando si cambiamos el _idComit_ por el master devolvemos el archivo a lo que tenemos guardado en el repositorio
git checkout _idComit_ nombre del archivo -> con este comando regresamos al disco el cambio del archivo en ese commit, pero no lo modificamos en el repositorio hasta que se haga add y commit

git rm
    --cached 
        - borra el stating
        - borra el seguimiento
        + mantiene la informacion en el disco duro
    --forced 
        - borra el stating
        - borra el seguimiento 
        - borra la informacion en el disco duro 

git reset 
    --soft
        + mantiene el stating
        - borra el repositorio
        - mantiene la informacion en el disco duro
    --hard 
        - borra el staging
        - borra el seguimiento 
        - borra la informacion en el disco duro
    --HEAD
        - borra el staging
        + mantiene el seguimiento
        + mantiene la informacion en el disco duro

